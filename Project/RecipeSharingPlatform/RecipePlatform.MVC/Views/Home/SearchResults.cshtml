@using RecipePlatform.Models.ApplicationModels
@model RecipePlatform.MVC.Models.ViewModels.SearchResultsViewModel
@{
    ViewData["Title"] = string.IsNullOrEmpty(Model.SearchQuery) ? "All Recipes" : $"Search Results for '{Model.SearchQuery}'";
}


<!-- Search Header Section -->
<section class="py-4" style="background: linear-gradient(135deg, #f8f9fa, #e9ecef);">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <!-- Large Search Bar for Kitchen Use -->
                <form class="mb-4" asp-controller="Home" asp-action="Search" method="get">
                    <div class="input-group input-group-lg">
                        <input class="form-control fs-3 py-4"
                               type="text"
                               name="q"
                               value="@Model.SearchQuery"
                               placeholder="Search recipes or ingredients..."
                               style="border-radius: 15px 0 0 15px; border: 2px solid #dee2e6; min-height: 70px;" />
                        <button class="btn btn-primary fs-3 px-5"
                                type="submit"
                                style="border-radius: 0 15px 15px 0; border: 2px solid #0d6efd; min-height: 70px;">
                            <i class="bi bi-search me-2"></i>Search
                        </button>
                    </div>
                </form>

                <!-- Search Results Info -->
                <div class="d-flex justify-content-between align-items-center flex-wrap">
                    <div>
                        @if (!string.IsNullOrEmpty(Model.SearchQuery))
                        {
                            <h2 class="mb-1 fw-bold">
                                <i class="bi bi-search me-2 text-primary"></i>
                                Search Results for "@Model.SearchQuery"
                            </h2>
                            <p class="text-muted fs-5 mb-0">Found @Model.TotalRecipes recipes</p>
                        }
                        else
                        {
                            <h2 class="mb-1 fw-bold">
                                <i class="bi bi-journal-bookmark me-2 text-primary"></i>
                                All Recipes
                            </h2>
                            <p class="text-muted fs-5 mb-0">Browse @Model.TotalRecipes delicious recipes</p>
                        }
                    </div>

                    @if (!string.IsNullOrEmpty(Model.SearchQuery))
                    {
                        <a asp-controller="Home" asp-action="Search" class="btn btn-outline-secondary btn-lg">
                            <i class="bi bi-x-circle me-2"></i>Clear Search
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Results Section -->
<section class="py-5">
    <div class="container">
        @if (Model.Recipes?.Any() == true)
        {
            <!-- Recipe Grid -->
            <div class="row g-4 mb-5">
                @foreach (var recipe in Model.Recipes)
                {
                    <div class="col-xl-3 col-lg-4 col-md-6">
                        <a asp-controller="Recipe" asp-action="Details" asp-route-id="@recipe.Id" class="text-decoration-none">
                            <div class="card h-100 shadow-sm recipe-card" style="border-radius: 15px; border: none;">
                                <div class="card-body p-3">
                                    <!-- Title and Difficulty -->
                                    <div class="d-flex justify-content-between align-items-start mb-2">
                                        <h6 class="card-title fw-bold mb-0 text-dark" style="font-size: 1.1rem;">
                                            @recipe.Title
                                        </h6>
                                        @if (recipe.Difficulty.HasValue)
                                        {
                                            var difficultyClass = recipe.Difficulty.ToString() switch
                                            {
                                                "Easy" => "bg-success",
                                                "Medium" => "bg-warning text-dark",
                                                "Hard" => "bg-danger",
                                                _ => "bg-secondary"
                                            };
                                            <span class="badge @difficultyClass py-1 px-2 small fw-bold" style="border-radius: 15px;">
                                                @recipe.Difficulty
                                            </span>
                                        }
                                    </div>

                                    <p class="card-text text-muted mb-2 small" style="line-height: 1.3;">
                                        @(recipe.Description?.Length > 60 ? recipe.Description.Substring(0, 60) + "..." : recipe.Description)
                                    </p>

                                    <!-- Category Badge -->
                                    @if (recipe.Category != null)
                                    {
                                        <span class="badge bg-primary mb-2 py-1 px-2 small" style="border-radius: 15px; font-size: 0.7rem;">
                                            @recipe.Category.Name
                                        </span>
                                    }

                                    <!-- Time and Servings -->
                                    <div class="d-flex gap-2 mb-2 small">
                                        @if (recipe.PrepTimeMinutes.HasValue && recipe.CookTimeMinutes.HasValue)
                                        {
                                            <div class="d-flex align-items-center text-muted">
                                                <i class="bi bi-clock me-1"></i>
                                                <span>@((recipe.PrepTimeMinutes + recipe.CookTimeMinutes).Value) min</span>
                                            </div>
                                        }

                                        @if (recipe.Servings.HasValue)
                                        {
                                            <div class="d-flex align-items-center text-muted">
                                                <i class="bi bi-people me-1"></i>
                                                <span>@recipe.Servings</span>
                                            </div>
                                        }
                                    </div>

                                    <!-- Author and Rating -->
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div class="d-flex align-items-center">
                                            <i class="bi bi-person-circle me-1 text-muted small"></i>
                                            <span class="text-muted small">@recipe.Author?.UserName</span>
                                        </div>

                                        <!-- Star Rating -->
                                        <div class="rating d-flex align-items-center">
                                            @if (recipe.Ratings?.Any() == true)
                                            {
                                                var avgRating = recipe.Ratings.Average(r => r.RateValue);
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    if (i <= Math.Round(avgRating))
                                                    {
                                                        <i class="bi bi-star-fill text-warning" style="font-size: 0.8rem;"></i>
                                                    }
                                                    else if (i - 0.5 <= avgRating)
                                                    {
                                                        <i class="bi bi-star-half text-warning" style="font-size: 0.8rem;"></i>
                                                    }
                                                    else
                                                    {
                                                        <i class="bi bi-star text-muted" style="font-size: 0.8rem;"></i>
                                                    }
                                                }
                                                <span class="ms-1 text-muted" style="font-size: 0.7rem;">@avgRating.ToString("F1")</span>
                                            }
                                            else
                                            {
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    <i class="bi bi-star text-muted" style="font-size: 0.8rem;"></i>
                                                }
                                                <span class="ms-1 text-muted" style="font-size: 0.7rem;">No rating</span>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </a>
                    </div>
                }
            </div>

            <!-- Pagination -->
            @if (Model.TotalPages > 1)
            {
                <nav aria-label="Search results pagination">
                    <ul class="pagination pagination-lg justify-content-center">
                        <!-- Previous Button -->
                        @if (Model.HasPrevious)
                        {
                            <li class="page-item">
                                <a class="page-link py-3 px-4"
                                   asp-controller="Home"
                                   asp-action="Search"
                                   asp-route-q="@Model.SearchQuery"
                                   asp-route-page="@(Model.CurrentPage - 1)"
                                   style="border-radius: 10px 0 0 10px;">
                                    <i class="bi bi-chevron-left"></i> Previous
                                </a>
                            </li>
                        }

                        <!-- Page Numbers -->
                        @{
                            var startPage = Math.Max(1, Model.CurrentPage - 2);
                            var endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 2);
                        }

                        @for (int i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link py-3 px-4 @(i == Model.CurrentPage ? "fw-bold" : "")"
                                   asp-controller="Home"
                                   asp-action="Search"
                                   asp-route-q="@Model.SearchQuery"
                                   asp-route-page="@i">
                                    @i
                                </a>
                            </li>
                        }

                        <!-- Next Button -->
                        @if (Model.HasNext)
                        {
                            <li class="page-item">
                                <a class="page-link py-3 px-4"
                                   asp-controller="Home"
                                   asp-action="Search"
                                   asp-route-q="@Model.SearchQuery"
                                   asp-route-page="@(Model.CurrentPage + 1)"
                                   style="border-radius: 0 10px 10px 0;">
                                    Next <i class="bi bi-chevron-right"></i>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>

                <!-- Page Info -->
                <div class="text-center mt-3">
                    <small class="text-muted fs-6">
                        Showing page @Model.CurrentPage of @Model.TotalPages
                        (@Model.TotalRecipes total recipes)
                    </small>
                </div>
            }
        }
        else
        {
            <!-- No Results -->
            <div class="text-center py-5">
                <div class="mb-4">
                    <i class="bi bi-search fs-1 text-muted mb-3 d-block"></i>
                    @if (!string.IsNullOrEmpty(Model.SearchQuery))
                    {
                        <h3 class="text-muted mb-3">No recipes found for "@Model.SearchQuery"</h3>
                        <p class="text-muted fs-5 mb-4">Try searching with different keywords or browse all recipes</p>
                        <div class="d-flex gap-3 justify-content-center flex-wrap">
                            <a asp-controller="Home" asp-action="Search" class="btn btn-primary btn-lg px-4">
                                <i class="bi bi-journal-bookmark me-2"></i>Browse All Recipes
                            </a>
                            <button class="btn btn-outline-secondary btn-lg px-4" onclick="document.querySelector('input[name=q]').focus()">
                                <i class="bi bi-search me-2"></i>Try Another Search
                            </button>
                        </div>
                    }
                    else
                    {
                        <h3 class="text-muted mb-3">No recipes available yet</h3>
                        <p class="text-muted fs-5 mb-4">Be the first to share a delicious recipe with our community!</p>
                        @if (User.Identity.IsAuthenticated)
                        {
                            <a asp-controller="Recipe" asp-action="Create" class="btn btn-success btn-lg px-4">
                                <i class="bi bi-plus-lg me-2"></i>Add Your First Recipe
                            </a>
                        }
                        else
                        {
                            <a asp-controller="Account" asp-action="Register" class="btn btn-success btn-lg px-4">
                                <i class="bi bi-person-plus me-2"></i>Join & Share Recipes
                            </a>
                        }
                    }
                </div>

                <!-- Search Suggestions -->
                @if (!string.IsNullOrEmpty(Model.SearchQuery))
                {
                    <div class="mt-5">
                        <h5 class="text-muted mb-3">Try searching for:</h5>
                        <div class="d-flex gap-2 justify-content-center flex-wrap">
                            @foreach (var suggestion in new[] { "chicken", "pasta", "vegetarian", "dessert", "quick meals", "healthy" })
                            {
                                <a asp-controller="Home"
                                   asp-action="Search"
                                   asp-route-q="@suggestion"
                                   class="btn btn-outline-primary btn-sm">
                                    @suggestion
                                </a>
                            }
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</section>

<style>
    .recipe-card {
        transition: all 0.3s ease;
        cursor: pointer;
        min-height: 200px;
    }

        .recipe-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 35px rgba(0,0,0,0.15) !important;
        }

    /* Kitchen-friendly pagination */
    .pagination .page-link {
        border: 2px solid #dee2e6;
        margin: 0 2px;
        border-radius: 8px !important;
        font-size: 1.1rem;
        min-height: 50px;
        min-width: 50px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .pagination .page-item.active .page-link {
        background-color: #0d6efd;
        border-color: #0d6efd;
    }

    .pagination .page-link:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }

    /* Better touch targets */
    .btn {
        min-height: 44px;
    }

    /* Clean link styling for recipe cards */
    a.text-decoration-none:hover {
        text-decoration: none !important;
    }

    a.text-decoration-none .card-title {
        color: #333 !important;
    }

    a.text-decoration-none:hover .card-title {
        color: #0d6efd !important;
    }
</style>