@model RecipePlatform.MVC.Models.ViewModels.AddRecipeVM

@{
    ViewData["Title"] = "Add New Recipe";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h3 class="mb-0">
                        <i class="fas fa-plus-circle"></i>
                        Add New Recipe
                    </h3>
                </div>
                <div class="card-body">

                    <!-- Debug Panel -->
                    <div class="alert alert-info mb-3">
                        <h6><i class="fas fa-bug"></i> Debug Info:</h6>
                        <small>
                            Categories: @(Model?.Categories?.Count() ?? 0) |
                            Difficulties: @(Model?.Difficulties?.Count() ?? 0) |
                            Page loaded at: @DateTime.Now.ToString("HH:mm:ss")
                        </small>
                    </div>

                    <!-- عرض رسائل النجاح -->
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    <!-- عرض رسائل الخطأ العامة -->
                    <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

                    <!-- Quick Test -->
                    <div class="alert alert-warning mb-3">
                        <h6><i class="fas fa-flask"></i> Quick Test:</h6>
                        <form asp-action="TestPost" method="post" style="display: inline;">
                            <input name="test" value="Hello from form!" type="hidden" />
                            <button type="submit" class="btn btn-sm btn-warning">Test POST</button>
                        </form>
                    </div>

                    <form asp-controller="Recipe" asp-action="Add" method="post" id="recipeForm">

                        <!-- اسم الوصفة -->
                        <div class="form-group mb-3">
                            <label asp-for="Recipe.Title" class="form-label">
                                <i class="fas fa-utensils"></i>
                                Recipe Title *
                            </label>
                            <input asp-for="Recipe.Title" class="form-control" placeholder="Enter recipe title..." />
                            <span asp-validation-for="Recipe.Title" class="text-danger"></span>
                        </div>

                        <!-- وصف مختصر -->
                        <div class="form-group mb-3">
                            <label asp-for="Recipe.Description" class="form-label">
                                <i class="fas fa-align-left"></i>
                                Short Description
                            </label>
                            <textarea asp-for="Recipe.Description" class="form-control" rows="3"
                                      placeholder="Write a short description for the recipe..."></textarea>
                            <span asp-validation-for="Recipe.Description" class="text-danger"></span>
                        </div>

                        <div class="row">
                            <!-- التصنيف -->
                            <div class="col-md-6 mb-3">
                                <label asp-for="Recipe.CategoryId" class="form-label">
                                    <i class="fas fa-tags"></i>
                                    Category *
                                </label>
                                <select asp-for="Recipe.CategoryId" asp-items="Model.Categories" class="form-control">
                                    <option value="">-- Select Category --</option>
                                </select>
                                <span asp-validation-for="Recipe.CategoryId" class="text-danger"></span>
                            </div>

                            <!-- مستوى الصعوبة -->
                            <div class="col-md-6 mb-3">
                                <label asp-for="Recipe.Difficulty" class="form-label">
                                    <i class="fas fa-chart-bar"></i>
                                    Difficulty Level *
                                </label>
                                <select asp-for="Recipe.Difficulty" asp-items="Model.Difficulties" class="form-control">
                                    <option value="">-- Select Difficulty --</option>
                                </select>
                                <span asp-validation-for="Recipe.Difficulty" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="row">
                            <!-- وقت التحضير -->
                            <div class="col-md-6 mb-3">
                                <label asp-for="Recipe.PrepTimeMinutes" class="form-label">
                                    <i class="fas fa-clock"></i>
                                    Preparation Time (minutes) *
                                </label>
                                <input asp-for="Recipe.PrepTimeMinutes" type="number" min="1" class="form-control"
                                       placeholder="e.g.: 30" />
                                <span asp-validation-for="Recipe.PrepTimeMinutes" class="text-danger"></span>
                            </div>

                            <!-- وقت الطبخ -->
                            <div class="col-md-6 mb-3">
                                <label asp-for="Recipe.CookTimeMinutes" class="form-label">
                                    <i class="fas fa-fire"></i>
                                    Cooking Time (minutes) *
                                </label>
                                <input asp-for="Recipe.CookTimeMinutes" type="number" min="0" class="form-control"
                                       placeholder="e.g.: 45" />
                                <span asp-validation-for="Recipe.CookTimeMinutes" class="text-danger"></span>
                            </div>
                        </div>

                        <!-- المكونات الديناميكية -->
                        <div class="form-group mb-3">
                            <label class="form-label">
                                <i class="fas fa-list-ul"></i>
                                Ingredients *
                            </label>
                            <div id="ingredientsContainer">
                                @if (Model?.IngredientsList != null && Model.IngredientsList.Any())
                                {
                                    @for (int i = 0; i < Model.IngredientsList.Count; i++)
                                    {
                                        <div class="input-group mb-2 ingredient-item">
                                            <input name="IngredientsList" value="@Model.IngredientsList[i]"
                                                   class="form-control" placeholder="Enter ingredient..." />
                                            <button type="button" class="btn btn-outline-danger remove-ingredient"
                                                    onclick="removeIngredient(this)">
                                                <i class="fas fa-minus"></i>
                                            </button>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <div class="input-group mb-2 ingredient-item">
                                        <input name="IngredientsList" class="form-control" placeholder="Enter ingredient..." />
                                        <button type="button" class="btn btn-outline-danger remove-ingredient"
                                                onclick="removeIngredient(this)">
                                            <i class="fas fa-minus"></i>
                                        </button>
                                    </div>
                                }
                            </div>
                            <button type="button" class="btn btn-outline-success" onclick="addIngredient()">
                                <i class="fas fa-plus"></i> Add Ingredient
                            </button>
                            <span asp-validation-for="IngredientsList" class="text-danger d-block"></span>
                        </div>

                        <!-- خطوات التحضير الديناميكية -->
                        <div class="form-group mb-4">
                            <label class="form-label">
                                <i class="fas fa-list-ol"></i>
                                Instructions *
                            </label>
                            <div id="instructionsContainer">
                                @if (Model?.InstructionsList != null && Model.InstructionsList.Any())
                                {
                                    @for (int i = 0; i < Model.InstructionsList.Count; i++)
                                    {
                                        <div class="input-group mb-2 instruction-item">
                                            <span class="input-group-text step-number">@(i + 1)</span>
                                            <textarea name="InstructionsList" class="form-control" rows="2"
                                                      placeholder="Write preparation step...">@Model.InstructionsList[i]</textarea>
                                            <button type="button" class="btn btn-outline-danger remove-instruction"
                                                    onclick="removeInstruction(this)">
                                                <i class="fas fa-minus"></i>
                                            </button>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <div class="input-group mb-2 instruction-item">
                                        <span class="input-group-text step-number">1</span>
                                        <textarea name="InstructionsList" class="form-control" rows="2"
                                                  placeholder="Write preparation step..."></textarea>
                                        <button type="button" class="btn btn-outline-danger remove-instruction"
                                                onclick="removeInstruction(this)">
                                            <i class="fas fa-minus"></i>
                                        </button>
                                    </div>
                                }
                            </div>
                            <button type="button" class="btn btn-outline-success" onclick="addInstruction()">
                                <i class="fas fa-plus"></i> Add Step
                            </button>
                            <span asp-validation-for="InstructionsList" class="text-danger d-block"></span>
                        </div>

                        <!-- أزرار الحفظ والإلغاء -->
                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <a asp-controller="Recipe" asp-action="MyRecipes" class="btn btn-secondary me-md-2">
                                <i class="fas fa-times"></i> Cancel
                            </a>
                            <button type="submit" class="btn btn-success" id="submitBtn">
                                <i class="fas fa-save"></i> Save Recipe
                            </button>
                        </div>

                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        console.log("🚀 Scripts loaded successfully!");
        console.log("Page loaded at:", new Date().toLocaleTimeString());

        // Debug form data before submit
        document.getElementById('recipeForm').addEventListener('submit', function(e) {
            console.log("📝 Form submit triggered!");

            // Log all form data
            const formData = new FormData(this);
            console.log("📋 Form data being sent:");

            for (let [key, value] of formData.entries()) {
                console.log(`  ${key}: ${value}`);
            }

            // Count ingredients and instructions
            const ingredients = document.querySelectorAll('input[name="IngredientsList"]');
            const instructions = document.querySelectorAll('textarea[name="InstructionsList"]');

            console.log(`📊 Dynamic fields count:`);
            console.log(`  - Ingredients: ${ingredients.length}`);
            console.log(`  - Instructions: ${instructions.length}`);

            // Log their values
            ingredients.forEach((input, index) => {
                console.log(`  Ingredient ${index + 1}: "${input.value}"`);
            });

            instructions.forEach((textarea, index) => {
                console.log(`  Instruction ${index + 1}: "${textarea.value}"`);
            });

            console.log("✅ Form validation passed, submitting...");
        });

        // إضافة مكون جديد
        function addIngredient() {
            console.log("➕ Adding new ingredient");
            const container = document.getElementById('ingredientsContainer');
            const newDiv = document.createElement('div');
            newDiv.className = 'input-group mb-2 ingredient-item';
            newDiv.innerHTML = `
                <input name="IngredientsList" class="form-control" placeholder="Enter ingredient..." />
                <button type="button" class="btn btn-outline-danger remove-ingredient" onclick="removeIngredient(this)">
                    <i class="fas fa-minus"></i>
                </button>
            `;
            container.appendChild(newDiv);
            newDiv.querySelector('input').focus();
            console.log(`✅ New ingredient field added. Total: ${container.children.length}`);
        }

        // حذف مكون
        function removeIngredient(button) {
            const container = document.getElementById('ingredientsContainer');
            if (container.children.length > 1) {
                button.closest('.ingredient-item').remove();
                console.log(`➖ Ingredient removed. Remaining: ${container.children.length}`);
            } else {
                console.log("⚠️ Cannot remove last ingredient");
                alert('At least one ingredient is required');
            }
        }

        // إضافة خطوة جديدة
        function addInstruction() {
            console.log("➕ Adding new instruction");
            const container = document.getElementById('instructionsContainer');
            const stepNumber = container.children.length + 1;
            const newDiv = document.createElement('div');
            newDiv.className = 'input-group mb-2 instruction-item';
            newDiv.innerHTML = `
                <span class="input-group-text step-number">${stepNumber}</span>
                <textarea name="InstructionsList" class="form-control" rows="2" placeholder="Write preparation step..."></textarea>
                <button type="button" class="btn btn-outline-danger remove-instruction" onclick="removeInstruction(this)">
                    <i class="fas fa-minus"></i>
                </button>
            `;
            container.appendChild(newDiv);
            newDiv.querySelector('textarea').focus();
            console.log(`✅ New instruction field added. Total: ${container.children.length}`);
        }

        // حذف خطوة
        function removeInstruction(button) {
            const container = document.getElementById('instructionsContainer');
            if (container.children.length > 1) {
                button.closest('.instruction-item').remove();
                updateStepNumbers();
                console.log(`➖ Instruction removed. Remaining: ${container.children.length}`);
            } else {
                console.log("⚠️ Cannot remove last instruction");
                alert('At least one step is required');
            }
        }

        // تحديث أرقام الخطوات
        function updateStepNumbers() {
            const container = document.getElementById('instructionsContainer');
            const stepNumbers = container.querySelectorAll('.step-number');
            stepNumbers.forEach((step, index) => {
                step.textContent = index + 1;
            });
            console.log(`🔢 Step numbers updated`);
        }

        // Test connection
        console.log("🔗 Testing browser console connection...");
        console.log("✅ Browser console is working!");
    </script>
}