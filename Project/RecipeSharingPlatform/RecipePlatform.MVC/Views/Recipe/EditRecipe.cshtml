@model RecipePlatform.MVC.Models.ViewModels.EditRecipeVM
@{
    ViewData["Title"] = "Edit Recipe";
}

<div class="container my-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow">
                <div class="card-header bg-warning text-dark">
                    <h4 class="mb-0">
                        <i class="fas fa-edit"></i> Edit Recipe: @Model.Recipe.Title
                    </h4>
                </div>
                <div class="card-body">
                    <form asp-action="EditRecipe" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" asp-for="Recipe.Id" />

                        <!-- Recipe Basic Info -->
                        <div class="row">
                            <div class="col-md-12 mb-3">
                                <label asp-for="Recipe.Title" class="form-label">Recipe Title *</label>
                                <input asp-for="Recipe.Title" class="form-control" placeholder="Enter recipe title" required />
                                <span asp-validation-for="Recipe.Title" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label asp-for="Recipe.CategoryId" class="form-label">Category *</label>
                                <select asp-for="Recipe.CategoryId" asp-items="Model.Categories" class="form-select" required>
                                    <option value="">Select Category</option>
                                </select>
                                <span asp-validation-for="Recipe.CategoryId" class="text-danger"></span>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label asp-for="Recipe.Difficulty" class="form-label">Difficulty Level</label>
                                <select asp-for="Recipe.Difficulty" asp-items="Model.Difficulties" class="form-select">
                                    <option value="">Select Difficulty</option>
                                </select>
                                <span asp-validation-for="Recipe.Difficulty" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Recipe.Description" class="form-label">Description</label>
                            <textarea asp-for="Recipe.Description" class="form-control" rows="3"
                                      placeholder="Describe your recipe..."></textarea>
                            <span asp-validation-for="Recipe.Description" class="text-danger"></span>
                        </div>

                        <!-- Time and Servings -->
                        <div class="row">
                            <div class="col-md-4 mb-3">
                                <label asp-for="Recipe.PrepTimeMinutes" class="form-label">Prep Time (minutes)</label>
                                <input asp-for="Recipe.PrepTimeMinutes" type="number" class="form-control" min="1" />
                                <span asp-validation-for="Recipe.PrepTimeMinutes" class="text-danger"></span>
                            </div>
                            <div class="col-md-4 mb-3">
                                <label asp-for="Recipe.CookTimeMinutes" class="form-label">Cook Time (minutes)</label>
                                <input asp-for="Recipe.CookTimeMinutes" type="number" class="form-control" min="1" />
                                <span asp-validation-for="Recipe.CookTimeMinutes" class="text-danger"></span>
                            </div>
                            <div class="col-md-4 mb-3">
                                <label asp-for="Recipe.Servings" class="form-label">Servings</label>
                                <input asp-for="Recipe.Servings" type="number" class="form-control" min="1" />
                                <span asp-validation-for="Recipe.Servings" class="text-danger"></span>
                            </div>
                        </div>

                        <!-- Ingredients Section -->
                        <div class="mb-4">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <h5 class="text-primary">
                                    <i class="fas fa-list-ul"></i> Ingredients *
                                </h5>
                                <button type="button" class="btn btn-sm btn-outline-primary" onclick="addIngredient()">
                                    <i class="fas fa-plus"></i> Add Ingredient
                                </button>
                            </div>
                            <div id="ingredientsContainer">
                                @for (int i = 0; i < Model.IngredientsList.Count; i++)
                                {
                                    <div class="ingredient-item mb-2">
                                        <div class="input-group">
                                            <input name="IngredientsList[@i]" value="@Model.IngredientsList[i]"
                                                   class="form-control" placeholder="Enter ingredient" />
                                            <button type="button" class="btn btn-outline-danger" onclick="removeIngredient(this)">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </div>
                                }
                                @if (!Model.IngredientsList.Any())
                                {
                                    <div class="ingredient-item mb-2">
                                        <div class="input-group">
                                            <input name="IngredientsList[0]" class="form-control" placeholder="Enter ingredient" />
                                            <button type="button" class="btn btn-outline-danger" onclick="removeIngredient(this)">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </div>
                                }
                            </div>
                            <span asp-validation-for="IngredientsList" class="text-danger"></span>
                        </div>

                        <!-- Instructions Section -->
                        <div class="mb-4">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <h5 class="text-primary">
                                    <i class="fas fa-clipboard-list"></i> Instructions *
                                </h5>
                                <button type="button" class="btn btn-sm btn-outline-primary" onclick="addInstruction()">
                                    <i class="fas fa-plus"></i> Add Step
                                </button>
                            </div>
                            <div id="instructionsContainer">
                                @for (int i = 0; i < Model.InstructionsList.Count; i++)
                                {
                                    <div class="instruction-item mb-3">
                                        <div class="input-group">
                                            <span class="input-group-text">@(i + 1)</span>
                                            <textarea name="InstructionsList[@i]" class="form-control" rows="2"
                                                      placeholder="Describe this step...">@Model.InstructionsList[i]</textarea>
                                            <button type="button" class="btn btn-outline-danger" onclick="removeInstruction(this)">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </div>
                                }
                                @if (!Model.InstructionsList.Any())
                                {
                                    <div class="instruction-item mb-3">
                                        <div class="input-group">
                                            <span class="input-group-text">1</span>
                                            <textarea name="InstructionsList[0]" class="form-control" rows="2"
                                                      placeholder="Describe this step..."></textarea>
                                            <button type="button" class="btn btn-outline-danger" onclick="removeInstruction(this)">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </div>
                                }
                            </div>
                            <span asp-validation-for="InstructionsList" class="text-danger"></span>
                        </div>

                        <!-- Action Buttons -->
                        <div class="d-flex justify-content-between">
                            <a asp-action="MyRecipes" class="btn btn-secondary">
                                <i class="fas fa-arrow-left"></i> Cancel
                            </a>
                            <button type="submit" class="btn btn-warning">
                                <i class="fas fa-save"></i> Update Recipe
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    let ingredientIndex = @Model.IngredientsList.Count;
    let instructionIndex = @Model.InstructionsList.Count;

    function addIngredient() {
        const container = document.getElementById('ingredientsContainer');
        const div = document.createElement('div');
        div.className = 'ingredient-item mb-2';
        div.innerHTML = `
            <div class="input-group">
                <input name="IngredientsList[${ingredientIndex}]" class="form-control" placeholder="Enter ingredient" />
                <button type="button" class="btn btn-outline-danger" onclick="removeIngredient(this)">
                    <i class="fas fa-trash"></i>
                </button>
            </div>
        `;
        container.appendChild(div);
        ingredientIndex++;
    }

    function removeIngredient(button) {
        const container = document.getElementById('ingredientsContainer');
        if (container.children.length > 1) {
            button.closest('.ingredient-item').remove();
            reindexIngredients();
        }
    }

    function reindexIngredients() {
        const inputs = document.querySelectorAll('#ingredientsContainer input');
        inputs.forEach((input, index) => {
            input.name = `IngredientsList[${index}]`;
        });
        ingredientIndex = inputs.length;
    }

    function addInstruction() {
        const container = document.getElementById('instructionsContainer');
        const div = document.createElement('div');
        div.className = 'instruction-item mb-3';
        div.innerHTML = `
            <div class="input-group">
                <span class="input-group-text">${instructionIndex + 1}</span>
                <textarea name="InstructionsList[${instructionIndex}]" class="form-control" rows="2"
                          placeholder="Describe this step..."></textarea>
                <button type="button" class="btn btn-outline-danger" onclick="removeInstruction(this)">
                    <i class="fas fa-trash"></i>
                </button>
            </div>
        `;
        container.appendChild(div);
        instructionIndex++;
    }

    function removeInstruction(button) {
        const container = document.getElementById('instructionsContainer');
        if (container.children.length > 1) {
            button.closest('.instruction-item').remove();
            reindexInstructions();
        }
    }

    function reindexInstructions() {
        const items = document.querySelectorAll('#instructionsContainer .instruction-item');
        items.forEach((item, index) => {
            const textarea = item.querySelector('textarea');
            const span = item.querySelector('.input-group-text');
            textarea.name = `InstructionsList[${index}]`;
            span.textContent = index + 1;
        });
        instructionIndex = items.length;
    }
</script>